<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->

<configuration>
  <configSections><section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" requirePermission="false" />
    
		<sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
      <sectionGroup name="oauth2" type="DotNetOpenAuth.Configuration.OAuth2SectionGroup, DotNetOpenAuth.OAuth2">
        <section name="authorizationServer" type="DotNetOpenAuth.Configuration.OAuth2AuthorizationServerSection, DotNetOpenAuth.OAuth2.AuthorizationServer" requirePermission="false" allowLocation="true" />
      </sectionGroup>
			<section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
			<section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
		</sectionGroup>
	</configSections>
  <appSettings>
    <add key="webpages:Version" value="2.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="PreserveLoginUrl" value="true" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <add key="ResourceServerDecryptionKey" value="PFJTQUtleVZhbHVlPjxNb2R1bHVzPjZlZnpYTHNvSmQ5OVVQMjdOQ1hWSnpZSFVtMmlLTUVOSlo2eVpVSFNvTE5uYnFMdENZWjZXaEl3SXY5WVBGeit0Z1AvQWN0dXh3N2VWVzdsU0RaU0IvQU8ySk1kOXJ1MkJ4SHRVaUZVd2pySnNHTlRUS1NhVDFDOTA0YXFaTExaRUxmYnVvVllabnFKWkRvdjlreTkwaHZtTTYwY3FXbkU4TGc2aGZSYlFPOD08L01vZHVsdXM+PEV4cG9uZW50PkFRQUI8L0V4cG9uZW50PjxQPjlrUjZaNGtabGVMeTlVMlo4WFl3WXd5VTA2d1g2UTR0QytlUitRZm5jOWJJK1loVFFRQXA1RXM1MGZwcWorWE8yQUhnb3RwN1NMRHdLSmZ5UmUzcElRPT08L1A+PFE+OHlacEFEUndhTG45MHFIY1liVG14N094b20wQVlrNVJnaDRyTTF1cGpNTEVHZTF5M01Xa2R0eUs0L3RsamVOeEJmOS82a0w4WTEyRU4zZDluaCtZRHc9PTwvUT48RFA+SW94VXg3V2FHMGJ0WXJCeVNrZVVYakRqcUJaYWZGMTZ3RkxLVGE5b0x2NFF6OERxUFJJeXprNG5YR2ZQRDBUa0ViV2h0L2NDbUo0Sjh3ZnQreFYzUVE9PTwvRFA+PERRPlhpOWd1TzJYSlZuMlVpTFVwUnhYMEw5d2JZUmZnN1RtcWNwWjNaa0NBajVuaTh1SWxMQVNWdUJ6QklDYkErMDRHS1N4dmVLWXRUekNQR0lTeks5Y1RRPT08L0RRPjxJbnZlcnNlUT5kcmVJNmhLaXFOVjZQWXEva2pybENpQk5XaGV1SVRUcGZTS0lEa0ZYd0xLaThrQ2hKcW1FWVltVjFqb2hOOVJEMzNEU2xGcnY0TXZ1cWFUWG5iMXBwdz09PC9JbnZlcnNlUT48RD5uTGZDUUpGTk53TGtyYzB6RHArQ2owRU42dFoxM2FSck1KZUJvNEpVbzBOUXU3b0I0MjNzc0VpYlkvZDlvUVFWek5Ja200azM4YnN1a0VNNjhBVWxNOUJqTGpNZjZmdFF3YlJWbUY0cllPZmZ4czhoUGszRXN3aWoycVlsNmxUMVpUaFM3MHd0MWlyQWQrWmFKNWN5V29HSnZVTWs4cWpQaWNSeEtkbEdub0U9PC9EPjwvUlNBS2V5VmFsdWU+" />
    <add key="AuthorizationServerVerificationKey" value="PFJTQUtleVZhbHVlPjxNb2R1bHVzPjkwNU9zRjVnYXNIOUVFY0VYV2RaSXNpNlozbWxKRjhlMFlPancrVmY0M0lYTnhmc3ZzOUxvdTR6dVpUOHV5dndpT25jaDUrSXBIOHZTZ2ZzaUZLbFZuQXRzcXhUcU5HVXFBWk5HWG9rZ3FiS0d6WTFoajZLVWxHUlErcThJMHdFbzBrWFh3cjQ3bWFIN01pRVYvaXBiSjZvVmtkbC9XVHJybXMyb2JFR09CRT08L01vZHVsdXM+PEV4cG9uZW50PkFRQUI8L0V4cG9uZW50PjwvUlNBS2V5VmFsdWU+" />
    <add key="ClientId" value="6C9577C8A4E73DDAC48DAA6445BB1" />
    <add key="ClientSecret" value="03G7UUyj744bzwJmy8lQbN69tdhekv4a" />
    <add key="AuthorizationServerAuthorizeUrl" value="http://localhost:1934/oauth2/Authorize?auto=true" />
    <add key="AuthorizationServerTokenUrl" value="http://localhost:1934/oauth2/Token" />
    <add key="ApiUrl" value="http://api.local.com/" />
  </appSettings>

  <system.web>
    
    <compilation debug="true" targetFramework="4.0" />

    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
  </system.web>

  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    
    <modules runAllManagedModulesForAllRequests="true" />
    
  <handlers>
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness32" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers></system.webServer>

<system.net>
		<defaultProxy enabled="true" />
		<settings>
			<!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
			<!--<servicePointManager checkCertificateRevocationList="true"/>-->
		</settings>
	</system.net><runtime>
		<!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). -->
		<legacyHMACWarning enabled="0" />
	  <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
	   <dependentAssembly>
	    <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" culture="neutral" />
	    <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
	   </dependentAssembly>
	  </assemblyBinding>
</runtime>
<dotNetOpenAuth>

    <oauth2>
      <authorizationServer />
    </oauth2>
    <!-- Relaxing SSL requirements is useful for simple samples, but NOT a good idea in production. -->
    <messaging relaxSslRequirements="true">
      <untrustedWebRequest>
        <whitelistHosts>
          <!-- since this is a sample, and will often be used with localhost -->
          <add name="localhost" />


          <!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
          <!--<add name="localhost" />-->
        </whitelistHosts>
      </untrustedWebRequest>
    </messaging>
  </dotNetOpenAuth>
<log4net>
        <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
            <file value="RelyingParty.log" />
            <appendToFile value="true" />
            <rollingStyle value="Size" />
            <maxSizeRollBackups value="10" />
            <maximumFileSize value="100KB" />
            <staticLogFileName value="true" />
            <layout type="log4net.Layout.PatternLayout">
                <conversionPattern value="%date (GMT%date{%z}) [%thread] %-5level %logger - %message%newline" />
            </layout>
        </appender>
        <!-- Setup the root category, add the appenders and set the default level -->
        <root>
            <level value="INFO" />
            <appender-ref ref="RollingFileAppender" />
        </root>
        <!-- Specify the level for some specific categories -->
        <logger name="DotNetOpenAuth">
            <level value="ALL" />
        </logger>
    </log4net>
</configuration>
