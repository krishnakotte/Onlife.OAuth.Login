#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Onlife.OAuth.AuthorizationServer.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Onlife.OAuth")]
	public partial class OnlifeOAuthModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertOAuth_Authorization(OAuth_Authorization instance);
    partial void UpdateOAuth_Authorization(OAuth_Authorization instance);
    partial void DeleteOAuth_Authorization(OAuth_Authorization instance);
    partial void InsertOAuth_Client(OAuth_Client instance);
    partial void UpdateOAuth_Client(OAuth_Client instance);
    partial void DeleteOAuth_Client(OAuth_Client instance);
    partial void InsertOAuth_ClientScope(OAuth_ClientScope instance);
    partial void UpdateOAuth_ClientScope(OAuth_ClientScope instance);
    partial void DeleteOAuth_ClientScope(OAuth_ClientScope instance);
    partial void InsertOAuth_Nonce(OAuth_Nonce instance);
    partial void UpdateOAuth_Nonce(OAuth_Nonce instance);
    partial void DeleteOAuth_Nonce(OAuth_Nonce instance);
    partial void InsertOAuth_Resource(OAuth_Resource instance);
    partial void UpdateOAuth_Resource(OAuth_Resource instance);
    partial void DeleteOAuth_Resource(OAuth_Resource instance);
    partial void InsertOAuth_ResourceScope(OAuth_ResourceScope instance);
    partial void UpdateOAuth_ResourceScope(OAuth_ResourceScope instance);
    partial void DeleteOAuth_ResourceScope(OAuth_ResourceScope instance);
    partial void InsertOAuth_Scope(OAuth_Scope instance);
    partial void UpdateOAuth_Scope(OAuth_Scope instance);
    partial void DeleteOAuth_Scope(OAuth_Scope instance);
    partial void InsertOAuth_SymmetricCryptoKey(OAuth_SymmetricCryptoKey instance);
    partial void UpdateOAuth_SymmetricCryptoKey(OAuth_SymmetricCryptoKey instance);
    partial void DeleteOAuth_SymmetricCryptoKey(OAuth_SymmetricCryptoKey instance);
    #endregion
		
		public OnlifeOAuthModelDataContext() : 
				base(global::Onlife.OAuth.AuthorizationServer.Properties.Settings.Default.Onlife_OAuthConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OnlifeOAuthModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OnlifeOAuthModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OnlifeOAuthModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OnlifeOAuthModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<OAuth_Authorization> OAuth_Authorizations
		{
			get
			{
				return this.GetTable<OAuth_Authorization>();
			}
		}
		
		public System.Data.Linq.Table<OAuth_Client> OAuth_Clients
		{
			get
			{
				return this.GetTable<OAuth_Client>();
			}
		}
		
		public System.Data.Linq.Table<OAuth_ClientScope> OAuth_ClientScopes
		{
			get
			{
				return this.GetTable<OAuth_ClientScope>();
			}
		}
		
		public System.Data.Linq.Table<OAuth_Nonce> OAuth_Nonces
		{
			get
			{
				return this.GetTable<OAuth_Nonce>();
			}
		}
		
		public System.Data.Linq.Table<OAuth_Resource> OAuth_Resources
		{
			get
			{
				return this.GetTable<OAuth_Resource>();
			}
		}
		
		public System.Data.Linq.Table<OAuth_ResourceScope> OAuth_ResourceScopes
		{
			get
			{
				return this.GetTable<OAuth_ResourceScope>();
			}
		}
		
		public System.Data.Linq.Table<OAuth_Scope> OAuth_Scopes
		{
			get
			{
				return this.GetTable<OAuth_Scope>();
			}
		}
		
		public System.Data.Linq.Table<OAuth_SymmetricCryptoKey> OAuth_SymmetricCryptoKeys
		{
			get
			{
				return this.GetTable<OAuth_SymmetricCryptoKey>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OAuth_Authorization")]
	public partial class OAuth_Authorization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OAuth_AuthorizationId;
		
		private int _ClientId;
		
		private int _UserId;
		
		private int _ResourceId;
		
		private string _Scope;
		
		private System.Nullable<System.DateTime> _ExpirationDate;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _UpdatedDate;
		
		private EntityRef<OAuth_Client> _OAuth_Client;
		
		private EntityRef<OAuth_Resource> _OAuth_Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOAuth_AuthorizationIdChanging(int value);
    partial void OnOAuth_AuthorizationIdChanged();
    partial void OnClientIdChanging(int value);
    partial void OnClientIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnResourceIdChanging(int value);
    partial void OnResourceIdChanged();
    partial void OnScopeChanging(string value);
    partial void OnScopeChanged();
    partial void OnExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpirationDateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.DateTime value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public OAuth_Authorization()
		{
			this._OAuth_Client = default(EntityRef<OAuth_Client>);
			this._OAuth_Resource = default(EntityRef<OAuth_Resource>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OAuth_AuthorizationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OAuth_AuthorizationId
		{
			get
			{
				return this._OAuth_AuthorizationId;
			}
			set
			{
				if ((this._OAuth_AuthorizationId != value))
				{
					this.OnOAuth_AuthorizationIdChanging(value);
					this.SendPropertyChanging();
					this._OAuth_AuthorizationId = value;
					this.SendPropertyChanged("OAuth_AuthorizationId");
					this.OnOAuth_AuthorizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL")]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					if (this._OAuth_Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceId", DbType="Int NOT NULL")]
		public int ResourceId
		{
			get
			{
				return this._ResourceId;
			}
			set
			{
				if ((this._ResourceId != value))
				{
					if (this._OAuth_Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceId = value;
					this.SendPropertyChanged("ResourceId");
					this.OnResourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scope", DbType="NVarChar(MAX)")]
		public string Scope
		{
			get
			{
				return this._Scope;
			}
			set
			{
				if ((this._Scope != value))
				{
					this.OnScopeChanging(value);
					this.SendPropertyChanging();
					this._Scope = value;
					this.SendPropertyChanged("Scope");
					this.OnScopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpirationDate
		{
			get
			{
				return this._ExpirationDate;
			}
			set
			{
				if ((this._ExpirationDate != value))
				{
					this.OnExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._ExpirationDate = value;
					this.SendPropertyChanged("ExpirationDate");
					this.OnExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAuth_Client_OAuth_Authorization", Storage="_OAuth_Client", ThisKey="ClientId", OtherKey="OAuth_ClientId", IsForeignKey=true)]
		public OAuth_Client OAuth_Client
		{
			get
			{
				return this._OAuth_Client.Entity;
			}
			set
			{
				OAuth_Client previousValue = this._OAuth_Client.Entity;
				if (((previousValue != value) 
							|| (this._OAuth_Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OAuth_Client.Entity = null;
						previousValue.OAuth_Authorizations.Remove(this);
					}
					this._OAuth_Client.Entity = value;
					if ((value != null))
					{
						value.OAuth_Authorizations.Add(this);
						this._ClientId = value.OAuth_ClientId;
					}
					else
					{
						this._ClientId = default(int);
					}
					this.SendPropertyChanged("OAuth_Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAuth_Resource_OAuth_Authorization", Storage="_OAuth_Resource", ThisKey="ResourceId", OtherKey="OAuth_ResourceId", IsForeignKey=true)]
		public OAuth_Resource OAuth_Resource
		{
			get
			{
				return this._OAuth_Resource.Entity;
			}
			set
			{
				OAuth_Resource previousValue = this._OAuth_Resource.Entity;
				if (((previousValue != value) 
							|| (this._OAuth_Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OAuth_Resource.Entity = null;
						previousValue.OAuth_Authorizations.Remove(this);
					}
					this._OAuth_Resource.Entity = value;
					if ((value != null))
					{
						value.OAuth_Authorizations.Add(this);
						this._ResourceId = value.OAuth_ResourceId;
					}
					else
					{
						this._ResourceId = default(int);
					}
					this.SendPropertyChanged("OAuth_Resource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OAuth_Client")]
	public partial class OAuth_Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OAuth_ClientId;
		
		private string _ClientIdentifier;
		
		private string _ClientSecret;
		
		private string _Name;
		
		private string _Description;
		
		private string _WebsiteUrl;
		
		private string _RedirectUrl;
		
		private int _ClientType;
		
		private EntitySet<OAuth_Authorization> _OAuth_Authorizations;
		
		private EntitySet<OAuth_ClientScope> _OAuth_ClientScopes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOAuth_ClientIdChanging(int value);
    partial void OnOAuth_ClientIdChanged();
    partial void OnClientIdentifierChanging(string value);
    partial void OnClientIdentifierChanged();
    partial void OnClientSecretChanging(string value);
    partial void OnClientSecretChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnWebsiteUrlChanging(string value);
    partial void OnWebsiteUrlChanged();
    partial void OnRedirectUrlChanging(string value);
    partial void OnRedirectUrlChanged();
    partial void OnClientTypeChanging(int value);
    partial void OnClientTypeChanged();
    #endregion
		
		public OAuth_Client()
		{
			this._OAuth_Authorizations = new EntitySet<OAuth_Authorization>(new Action<OAuth_Authorization>(this.attach_OAuth_Authorizations), new Action<OAuth_Authorization>(this.detach_OAuth_Authorizations));
			this._OAuth_ClientScopes = new EntitySet<OAuth_ClientScope>(new Action<OAuth_ClientScope>(this.attach_OAuth_ClientScopes), new Action<OAuth_ClientScope>(this.detach_OAuth_ClientScopes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OAuth_ClientId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OAuth_ClientId
		{
			get
			{
				return this._OAuth_ClientId;
			}
			set
			{
				if ((this._OAuth_ClientId != value))
				{
					this.OnOAuth_ClientIdChanging(value);
					this.SendPropertyChanging();
					this._OAuth_ClientId = value;
					this.SendPropertyChanged("OAuth_ClientId");
					this.OnOAuth_ClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientIdentifier", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ClientIdentifier
		{
			get
			{
				return this._ClientIdentifier;
			}
			set
			{
				if ((this._ClientIdentifier != value))
				{
					this.OnClientIdentifierChanging(value);
					this.SendPropertyChanging();
					this._ClientIdentifier = value;
					this.SendPropertyChanged("ClientIdentifier");
					this.OnClientIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientSecret", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ClientSecret
		{
			get
			{
				return this._ClientSecret;
			}
			set
			{
				if ((this._ClientSecret != value))
				{
					this.OnClientSecretChanging(value);
					this.SendPropertyChanging();
					this._ClientSecret = value;
					this.SendPropertyChanged("ClientSecret");
					this.OnClientSecretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteUrl", DbType="NVarChar(MAX)")]
		public string WebsiteUrl
		{
			get
			{
				return this._WebsiteUrl;
			}
			set
			{
				if ((this._WebsiteUrl != value))
				{
					this.OnWebsiteUrlChanging(value);
					this.SendPropertyChanging();
					this._WebsiteUrl = value;
					this.SendPropertyChanged("WebsiteUrl");
					this.OnWebsiteUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedirectUrl", DbType="NVarChar(MAX)")]
		public string RedirectUrl
		{
			get
			{
				return this._RedirectUrl;
			}
			set
			{
				if ((this._RedirectUrl != value))
				{
					this.OnRedirectUrlChanging(value);
					this.SendPropertyChanging();
					this._RedirectUrl = value;
					this.SendPropertyChanged("RedirectUrl");
					this.OnRedirectUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientType", DbType="Int NOT NULL")]
		public int ClientType
		{
			get
			{
				return this._ClientType;
			}
			set
			{
				if ((this._ClientType != value))
				{
					this.OnClientTypeChanging(value);
					this.SendPropertyChanging();
					this._ClientType = value;
					this.SendPropertyChanged("ClientType");
					this.OnClientTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAuth_Client_OAuth_Authorization", Storage="_OAuth_Authorizations", ThisKey="OAuth_ClientId", OtherKey="ClientId")]
		public EntitySet<OAuth_Authorization> OAuth_Authorizations
		{
			get
			{
				return this._OAuth_Authorizations;
			}
			set
			{
				this._OAuth_Authorizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAuth_Client_OAuth_ClientScope", Storage="_OAuth_ClientScopes", ThisKey="OAuth_ClientId", OtherKey="ClientId")]
		public EntitySet<OAuth_ClientScope> OAuth_ClientScopes
		{
			get
			{
				return this._OAuth_ClientScopes;
			}
			set
			{
				this._OAuth_ClientScopes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OAuth_Authorizations(OAuth_Authorization entity)
		{
			this.SendPropertyChanging();
			entity.OAuth_Client = this;
		}
		
		private void detach_OAuth_Authorizations(OAuth_Authorization entity)
		{
			this.SendPropertyChanging();
			entity.OAuth_Client = null;
		}
		
		private void attach_OAuth_ClientScopes(OAuth_ClientScope entity)
		{
			this.SendPropertyChanging();
			entity.OAuth_Client = this;
		}
		
		private void detach_OAuth_ClientScopes(OAuth_ClientScope entity)
		{
			this.SendPropertyChanging();
			entity.OAuth_Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OAuth_ClientScope")]
	public partial class OAuth_ClientScope : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClientId;
		
		private string _ScopeIdentifier;
		
		private EntityRef<OAuth_Client> _OAuth_Client;
		
		private EntityRef<OAuth_Scope> _OAuth_Scope;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientIdChanging(int value);
    partial void OnClientIdChanged();
    partial void OnScopeIdentifierChanging(string value);
    partial void OnScopeIdentifierChanged();
    #endregion
		
		public OAuth_ClientScope()
		{
			this._OAuth_Client = default(EntityRef<OAuth_Client>);
			this._OAuth_Scope = default(EntityRef<OAuth_Scope>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					if (this._OAuth_Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeIdentifier", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ScopeIdentifier
		{
			get
			{
				return this._ScopeIdentifier;
			}
			set
			{
				if ((this._ScopeIdentifier != value))
				{
					if (this._OAuth_Scope.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScopeIdentifierChanging(value);
					this.SendPropertyChanging();
					this._ScopeIdentifier = value;
					this.SendPropertyChanged("ScopeIdentifier");
					this.OnScopeIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAuth_Client_OAuth_ClientScope", Storage="_OAuth_Client", ThisKey="ClientId", OtherKey="OAuth_ClientId", IsForeignKey=true)]
		public OAuth_Client OAuth_Client
		{
			get
			{
				return this._OAuth_Client.Entity;
			}
			set
			{
				OAuth_Client previousValue = this._OAuth_Client.Entity;
				if (((previousValue != value) 
							|| (this._OAuth_Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OAuth_Client.Entity = null;
						previousValue.OAuth_ClientScopes.Remove(this);
					}
					this._OAuth_Client.Entity = value;
					if ((value != null))
					{
						value.OAuth_ClientScopes.Add(this);
						this._ClientId = value.OAuth_ClientId;
					}
					else
					{
						this._ClientId = default(int);
					}
					this.SendPropertyChanged("OAuth_Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAuth_Scope_OAuth_ClientScope", Storage="_OAuth_Scope", ThisKey="ScopeIdentifier", OtherKey="Identifier", IsForeignKey=true)]
		public OAuth_Scope OAuth_Scope
		{
			get
			{
				return this._OAuth_Scope.Entity;
			}
			set
			{
				OAuth_Scope previousValue = this._OAuth_Scope.Entity;
				if (((previousValue != value) 
							|| (this._OAuth_Scope.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OAuth_Scope.Entity = null;
						previousValue.OAuth_ClientScopes.Remove(this);
					}
					this._OAuth_Scope.Entity = value;
					if ((value != null))
					{
						value.OAuth_ClientScopes.Add(this);
						this._ScopeIdentifier = value.Identifier;
					}
					else
					{
						this._ScopeIdentifier = default(string);
					}
					this.SendPropertyChanged("OAuth_Scope");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OAuth_Nonce")]
	public partial class OAuth_Nonce : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Context;
		
		private string _Code;
		
		private System.DateTime _Timestamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContextChanging(string value);
    partial void OnContextChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
		
		public OAuth_Nonce()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="NVarChar(500) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OAuth_Resource")]
	public partial class OAuth_Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OAuth_ResourceId;
		
		private string _Name;
		
		private string _AuthenticationTokenName;
		
		private string _AuthenticationUrl;
		
		private string _AuthenticationKey;
		
		private string _PublicTokenEncryptionKey;
		
		private EntitySet<OAuth_Authorization> _OAuth_Authorizations;
		
		private EntitySet<OAuth_ResourceScope> _OAuth_ResourceScopes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOAuth_ResourceIdChanging(int value);
    partial void OnOAuth_ResourceIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAuthenticationTokenNameChanging(string value);
    partial void OnAuthenticationTokenNameChanged();
    partial void OnAuthenticationUrlChanging(string value);
    partial void OnAuthenticationUrlChanged();
    partial void OnAuthenticationKeyChanging(string value);
    partial void OnAuthenticationKeyChanged();
    partial void OnPublicTokenEncryptionKeyChanging(string value);
    partial void OnPublicTokenEncryptionKeyChanged();
    #endregion
		
		public OAuth_Resource()
		{
			this._OAuth_Authorizations = new EntitySet<OAuth_Authorization>(new Action<OAuth_Authorization>(this.attach_OAuth_Authorizations), new Action<OAuth_Authorization>(this.detach_OAuth_Authorizations));
			this._OAuth_ResourceScopes = new EntitySet<OAuth_ResourceScope>(new Action<OAuth_ResourceScope>(this.attach_OAuth_ResourceScopes), new Action<OAuth_ResourceScope>(this.detach_OAuth_ResourceScopes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OAuth_ResourceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OAuth_ResourceId
		{
			get
			{
				return this._OAuth_ResourceId;
			}
			set
			{
				if ((this._OAuth_ResourceId != value))
				{
					this.OnOAuth_ResourceIdChanging(value);
					this.SendPropertyChanging();
					this._OAuth_ResourceId = value;
					this.SendPropertyChanged("OAuth_ResourceId");
					this.OnOAuth_ResourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationTokenName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AuthenticationTokenName
		{
			get
			{
				return this._AuthenticationTokenName;
			}
			set
			{
				if ((this._AuthenticationTokenName != value))
				{
					this.OnAuthenticationTokenNameChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationTokenName = value;
					this.SendPropertyChanged("AuthenticationTokenName");
					this.OnAuthenticationTokenNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationUrl", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AuthenticationUrl
		{
			get
			{
				return this._AuthenticationUrl;
			}
			set
			{
				if ((this._AuthenticationUrl != value))
				{
					this.OnAuthenticationUrlChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationUrl = value;
					this.SendPropertyChanged("AuthenticationUrl");
					this.OnAuthenticationUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthenticationKey", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string AuthenticationKey
		{
			get
			{
				return this._AuthenticationKey;
			}
			set
			{
				if ((this._AuthenticationKey != value))
				{
					this.OnAuthenticationKeyChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationKey = value;
					this.SendPropertyChanged("AuthenticationKey");
					this.OnAuthenticationKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicTokenEncryptionKey", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PublicTokenEncryptionKey
		{
			get
			{
				return this._PublicTokenEncryptionKey;
			}
			set
			{
				if ((this._PublicTokenEncryptionKey != value))
				{
					this.OnPublicTokenEncryptionKeyChanging(value);
					this.SendPropertyChanging();
					this._PublicTokenEncryptionKey = value;
					this.SendPropertyChanged("PublicTokenEncryptionKey");
					this.OnPublicTokenEncryptionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAuth_Resource_OAuth_Authorization", Storage="_OAuth_Authorizations", ThisKey="OAuth_ResourceId", OtherKey="ResourceId")]
		public EntitySet<OAuth_Authorization> OAuth_Authorizations
		{
			get
			{
				return this._OAuth_Authorizations;
			}
			set
			{
				this._OAuth_Authorizations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAuth_Resource_OAuth_ResourceScope", Storage="_OAuth_ResourceScopes", ThisKey="OAuth_ResourceId", OtherKey="ResourceId")]
		public EntitySet<OAuth_ResourceScope> OAuth_ResourceScopes
		{
			get
			{
				return this._OAuth_ResourceScopes;
			}
			set
			{
				this._OAuth_ResourceScopes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OAuth_Authorizations(OAuth_Authorization entity)
		{
			this.SendPropertyChanging();
			entity.OAuth_Resource = this;
		}
		
		private void detach_OAuth_Authorizations(OAuth_Authorization entity)
		{
			this.SendPropertyChanging();
			entity.OAuth_Resource = null;
		}
		
		private void attach_OAuth_ResourceScopes(OAuth_ResourceScope entity)
		{
			this.SendPropertyChanging();
			entity.OAuth_Resource = this;
		}
		
		private void detach_OAuth_ResourceScopes(OAuth_ResourceScope entity)
		{
			this.SendPropertyChanging();
			entity.OAuth_Resource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OAuth_ResourceScope")]
	public partial class OAuth_ResourceScope : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceId;
		
		private string _ScopeIdentifier;
		
		private EntityRef<OAuth_Resource> _OAuth_Resource;
		
		private EntityRef<OAuth_Scope> _OAuth_Scope;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIdChanging(int value);
    partial void OnResourceIdChanged();
    partial void OnScopeIdentifierChanging(string value);
    partial void OnScopeIdentifierChanged();
    #endregion
		
		public OAuth_ResourceScope()
		{
			this._OAuth_Resource = default(EntityRef<OAuth_Resource>);
			this._OAuth_Scope = default(EntityRef<OAuth_Scope>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ResourceId
		{
			get
			{
				return this._ResourceId;
			}
			set
			{
				if ((this._ResourceId != value))
				{
					if (this._OAuth_Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceId = value;
					this.SendPropertyChanged("ResourceId");
					this.OnResourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScopeIdentifier", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ScopeIdentifier
		{
			get
			{
				return this._ScopeIdentifier;
			}
			set
			{
				if ((this._ScopeIdentifier != value))
				{
					if (this._OAuth_Scope.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScopeIdentifierChanging(value);
					this.SendPropertyChanging();
					this._ScopeIdentifier = value;
					this.SendPropertyChanged("ScopeIdentifier");
					this.OnScopeIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAuth_Resource_OAuth_ResourceScope", Storage="_OAuth_Resource", ThisKey="ResourceId", OtherKey="OAuth_ResourceId", IsForeignKey=true)]
		public OAuth_Resource OAuth_Resource
		{
			get
			{
				return this._OAuth_Resource.Entity;
			}
			set
			{
				OAuth_Resource previousValue = this._OAuth_Resource.Entity;
				if (((previousValue != value) 
							|| (this._OAuth_Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OAuth_Resource.Entity = null;
						previousValue.OAuth_ResourceScopes.Remove(this);
					}
					this._OAuth_Resource.Entity = value;
					if ((value != null))
					{
						value.OAuth_ResourceScopes.Add(this);
						this._ResourceId = value.OAuth_ResourceId;
					}
					else
					{
						this._ResourceId = default(int);
					}
					this.SendPropertyChanged("OAuth_Resource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAuth_Scope_OAuth_ResourceScope", Storage="_OAuth_Scope", ThisKey="ScopeIdentifier", OtherKey="Identifier", IsForeignKey=true)]
		public OAuth_Scope OAuth_Scope
		{
			get
			{
				return this._OAuth_Scope.Entity;
			}
			set
			{
				OAuth_Scope previousValue = this._OAuth_Scope.Entity;
				if (((previousValue != value) 
							|| (this._OAuth_Scope.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OAuth_Scope.Entity = null;
						previousValue.OAuth_ResourceScopes.Remove(this);
					}
					this._OAuth_Scope.Entity = value;
					if ((value != null))
					{
						value.OAuth_ResourceScopes.Add(this);
						this._ScopeIdentifier = value.Identifier;
					}
					else
					{
						this._ScopeIdentifier = default(string);
					}
					this.SendPropertyChanged("OAuth_Scope");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OAuth_Scope")]
	public partial class OAuth_Scope : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Identifier;
		
		private string _Description;
		
		private EntitySet<OAuth_ClientScope> _OAuth_ClientScopes;
		
		private EntitySet<OAuth_ResourceScope> _OAuth_ResourceScopes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdentifierChanging(string value);
    partial void OnIdentifierChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public OAuth_Scope()
		{
			this._OAuth_ClientScopes = new EntitySet<OAuth_ClientScope>(new Action<OAuth_ClientScope>(this.attach_OAuth_ClientScopes), new Action<OAuth_ClientScope>(this.detach_OAuth_ClientScopes));
			this._OAuth_ResourceScopes = new EntitySet<OAuth_ResourceScope>(new Action<OAuth_ResourceScope>(this.attach_OAuth_ResourceScopes), new Action<OAuth_ResourceScope>(this.detach_OAuth_ResourceScopes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Identifier", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Identifier
		{
			get
			{
				return this._Identifier;
			}
			set
			{
				if ((this._Identifier != value))
				{
					this.OnIdentifierChanging(value);
					this.SendPropertyChanging();
					this._Identifier = value;
					this.SendPropertyChanged("Identifier");
					this.OnIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAuth_Scope_OAuth_ClientScope", Storage="_OAuth_ClientScopes", ThisKey="Identifier", OtherKey="ScopeIdentifier")]
		public EntitySet<OAuth_ClientScope> OAuth_ClientScopes
		{
			get
			{
				return this._OAuth_ClientScopes;
			}
			set
			{
				this._OAuth_ClientScopes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OAuth_Scope_OAuth_ResourceScope", Storage="_OAuth_ResourceScopes", ThisKey="Identifier", OtherKey="ScopeIdentifier")]
		public EntitySet<OAuth_ResourceScope> OAuth_ResourceScopes
		{
			get
			{
				return this._OAuth_ResourceScopes;
			}
			set
			{
				this._OAuth_ResourceScopes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OAuth_ClientScopes(OAuth_ClientScope entity)
		{
			this.SendPropertyChanging();
			entity.OAuth_Scope = this;
		}
		
		private void detach_OAuth_ClientScopes(OAuth_ClientScope entity)
		{
			this.SendPropertyChanging();
			entity.OAuth_Scope = null;
		}
		
		private void attach_OAuth_ResourceScopes(OAuth_ResourceScope entity)
		{
			this.SendPropertyChanging();
			entity.OAuth_Scope = this;
		}
		
		private void detach_OAuth_ResourceScopes(OAuth_ResourceScope entity)
		{
			this.SendPropertyChanging();
			entity.OAuth_Scope = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OAuth_SymmetricCryptoKey")]
	public partial class OAuth_SymmetricCryptoKey : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Bucket;
		
		private string _Handle;
		
		private System.DateTime _ExpiresDate;
		
		private System.Data.Linq.Binary _Secret;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBucketChanging(string value);
    partial void OnBucketChanged();
    partial void OnHandleChanging(string value);
    partial void OnHandleChanged();
    partial void OnExpiresDateChanging(System.DateTime value);
    partial void OnExpiresDateChanged();
    partial void OnSecretChanging(System.Data.Linq.Binary value);
    partial void OnSecretChanged();
    #endregion
		
		public OAuth_SymmetricCryptoKey()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bucket", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Bucket
		{
			get
			{
				return this._Bucket;
			}
			set
			{
				if ((this._Bucket != value))
				{
					this.OnBucketChanging(value);
					this.SendPropertyChanging();
					this._Bucket = value;
					this.SendPropertyChanged("Bucket");
					this.OnBucketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Handle", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Handle
		{
			get
			{
				return this._Handle;
			}
			set
			{
				if ((this._Handle != value))
				{
					this.OnHandleChanging(value);
					this.SendPropertyChanging();
					this._Handle = value;
					this.SendPropertyChanged("Handle");
					this.OnHandleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiresDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExpiresDate
		{
			get
			{
				return this._ExpiresDate;
			}
			set
			{
				if ((this._ExpiresDate != value))
				{
					this.OnExpiresDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiresDate = value;
					this.SendPropertyChanged("ExpiresDate");
					this.OnExpiresDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Secret", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Secret
		{
			get
			{
				return this._Secret;
			}
			set
			{
				if ((this._Secret != value))
				{
					this.OnSecretChanging(value);
					this.SendPropertyChanging();
					this._Secret = value;
					this.SendPropertyChanged("Secret");
					this.OnSecretChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
